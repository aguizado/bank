openapi: 3.0.3
info:
  title: Bank API
  version: 1.0.0
  description: API for managing bank customers and financial products.

servers:
  - url: https://localhost:8080
    description: Production Server
    
tags:
  - name: customer
    description: Everything about Customers
  - name: account
    description: Everything about Accounts
  - name: loan
    description: Everything about Loans
  - name: transaction
    description: Everything about Transactions

paths:
  /customers:
    post:
      tags:
        - customer
      summary: Create a New Customer
      description: Create a New Customer
      requestBody:
        description: Create a New Customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/xml:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        201:
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer' 
            application/xml:
              schema:
                $ref: '#/components/schemas/Customer'
        400:
          description: Bad Request - Invalid customer data

  /customers/{customerId}:
    get:
      tags:
        - customer
      summary: Customer Details by ID
      description: Customer Details by ID
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
          description: Customer ID
      responses:
        200:
          description: Customer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer' 
            application/xml:
              schema:
                $ref: '#/components/schemas/Customer'
        400:
          description: Bad Request - Invalid customer ID
    
    put:
      tags:
        - customer
      summary: Update Customer Details
      description: Update Customer Details
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
          description: Customer ID
      requestBody:
        description: Update Customer Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/xml:
              schema:
                $ref: '#/components/schemas/Customer'
      responses:
        200:
          description: Customer details updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer' 
            application/xml:
              schema:
                $ref: '#/components/schemas/Customer'
        400:
          description: Bad Request - Invalid customer data
        404:
          description: Customer not found
    delete:
      tags:
        - customer
      summary: Delete Customer
      description: Delete Customer
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
          description: Customer ID
      responses:
        204:
          description: Customer deleted successfully
        404:
          description: Customer not found
          
  /customers/getByType:
    get:
      tags:
        - customer
      summary: Customer Details by type
      description: Customer Details by type
      parameters:
        - in: query
          name: type
          required: true
          schema:
            type: string
            default: personal
            enum:
              - personal
              - business
          description: Type
      responses:
        200:
          description: Customer details by type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer' 
            application/xml:
              schema:
                $ref: '#/components/schemas/Customer'
        400:
          description: Bad Request - Invalid customer ID

  /accounts:
    post:
      tags:
        - account
      summary: Create a New Bank Account
      description: Create a New Bank Account
      requestBody:
        description: Create a New Bank Account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/xml:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        201:
          description: Bank account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account' 
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          description: Bad Request - Invalid account data

  /accounts/{accountId}:
    get:
      tags:
        - account
      summary: Bank Account Details
      description: Bank Account Details
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: integer
          description: Account ID
      responses:
        200:
          description: Bank account details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account' 
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          description: Bad Request - Invalid account ID
    put:
      tags:
        - account
      summary: Update Bank Account Details
      description: Update Bank Account Details
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: integer
          description: Account ID
      requestBody:
        description: Update Bank Account Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
          application/xml:
              schema:
                $ref: '#/components/schemas/Account'
      responses:
        200:
          description: Bank account details updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account' 
            application/xml:
              schema:
                $ref: '#/components/schemas/Account'
        400:
          description: Bad Request - Invalid account data
        404:
          description: Account not found
    delete:
      tags:
        - account
      summary: Delete Bank Account
      description: Delete Bank Account
      parameters:
        - in: path
          name: accountId
          required: true
          schema:
            type: integer
          description: Account ID
      responses:
        204:
          description: Bank account deleted successfully
        404:
          description: Account not found

  /loans:
    post:
      tags:
        - loan
      summary: Create a New Credit Product
      description: Create a New Credit Product
      requestBody:
        description: Create a New Credit Product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
          application/xml:
            schema:
              $ref: '#/components/schemas/Loan'
        required: true
      responses:
        201:
          description: Credit product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan' 
            application/xml:
              schema:
                $ref: '#/components/schemas/Loan'
        400:
          description: Bad Request - Invalid credit product data

  /loans/{loanId}:
    get:
      tags:
        - loan
      summary: Credit Product Details
      description: Credit Product Details
      parameters:
        - in: path
          name: loanId
          required: true
          schema:
            type: integer
          description: Loan ID
      responses:
        200:
          description: Credit product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan' 
            application/xml:
              schema:
                $ref: '#/components/schemas/Loan'
        400:
          description: Bad Request - Invalid loan ID
    put:
      tags:
        - loan
      summary: Update Credit Product Details
      description: Update Credit Product Details
      parameters:
        - in: path
          name: loanId
          required: true
          schema:
            type: integer
          description: Loan ID
      requestBody:
        description: Update Credit Product Details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
          application/xml:
              schema:
                $ref: '#/components/schemas/Loan'
      responses:
        200:
          description: Credit product details updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan' 
            application/xml:
              schema:
                $ref: '#/components/schemas/Loan'
        400:
          description: Bad Request - Invalid credit product data
        404:
          description: Credit product not found
    delete:
      tags:
        - loan
      summary: Delete Credit Product
      description: Delete Credit Product
      parameters:
        - in: path
          name: loanId
          required: true
          schema:
            type: integer
          description: Loan ID
      responses:
        204:
          description: Credit product deleted successfully
        404:
          description: Credit product not found

  /transactions:
    post:
      tags:
        - transaction
      summary: Create a New Transaction
      description: Create a New Transaction
      requestBody:
        description: Create a New Transaction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Operation'
          application/xml:
            schema:
              $ref: '#/components/schemas/Operation'
        required: true
      responses:
        201:
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation' 
            application/xml:
              schema:
                $ref: '#/components/schemas/Operation'
        400:
          description: Bad Request - Invalid Transaction data
  
  /transactions/{customerId}:
    get:
      tags:
        - transaction
      summary: List Transactions of a Bank Product
      description: List Transactions of a Bank Product
      parameters:
        - in: path
          name: customerId
          required: true
          schema:
            type: integer
          description: Customer ID
      responses:
        200:
          description: List of transactions of a bank product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operation' 
            application/xml:
              schema:
                $ref: '#/components/schemas/Operation'
        400:
          description: Bad Request - Invalid parameters

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Andres
        last_name:
          type: string
          example: Guizado
        type:
          $ref: '#/components/schemas/Customer_type'
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
        loans:
          type: array
          items:
            $ref: '#/components/schemas/Loan'

    Customer_type:
      type: object
      properties:
        id:
          type: integer
          example: 1
        description:
          type: string
          enum: [personal, business]
          example: personal
          
    Account:
      type: object
      properties:
        id:
          type: integer
          example: 1
        account_number:
          type: string
          example: '0123456789'
        account_value:
          type: integer
          example: 500
        type:
          $ref: '#/components/schemas/Account_type'
        maintenance_fee:
          type: boolean
          example: true
        maintenance_value:
          type: integer
          example: 15
        monthly_transaction_limit:
          type: integer
          example: 3
        owners:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
        authorized_signatories:
          type: array
          items:
            $ref: '#/components/schemas/Customer'

    Account_type:
      type: object
      properties:
        id:
          type: integer
          example: 1
        description:
          type: string
          enum: [saving, current, fixed_term]
          example: saving
    
    Loan:
      type: object
      properties:
        id:
          type: integer
          example: 1
        loan_number:
          type: string
          example: '500188'
        loan_value:
          type: integer
          example: 1200
        type:
          $ref: '#/components/schemas/Loan_type'
        unit_limit:
          type: integer
          example: 1
          
    Loan_type:
      type: object
      properties:
        id:
          type: integer
          example: 1
        description:
          type: string
          enum: [personal, business, credit_card]
          example: personal
    
    Operation:
     type: object
     properties:
      id:
        type: integer
        example: 1
      customer:
        type: array
        items:
          $ref: '#/components/schemas/Customer'
      type_operation:
        $ref: '#/components/schemas/Operation_type'
      balance:
        type: number
        example: 500
      operation_date:
        type: string
        example: 12102023
        
    Operation_type:
      type: object
      properties:
        id:
          type: integer
          example: 1
        description:
          type: string
          enum: [deposit, withdrawal,payment,consumption]
          example: deposit